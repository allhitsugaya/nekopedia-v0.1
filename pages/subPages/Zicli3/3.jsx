import React from 'react';

const WhileDoWhilePage = () => {
    return (
        <div className="page-container">
            <h1>Цикл while/do while</h1>
            <p>
                У цій доповіді ми розглянемо такі види циклів як <code>while</code> та <code>do...while</code>, їх властивості та приклади використання.
            </p>
            <p>
                Вони корисні в різних сценаріях, включаючи ітерацію по масивам, опрацювання користувацьких введень, роботу з базами даних та багато інших завдань.
            </p>
            <p>
                Цикли <code>while</code> та <code>do...while</code> - це потужні інструменти в програмуванні, які дозволяють виконувати код умовно багато разів. Проте дотримуйтесь правил гарного програмування та уникайте безкінечних циклів, докладаючи особливу увагу до умов виходу з циклів.
            </p>
            <p>
                Навчайтеся використовувати ці цикли в своїх проектах, тоді ви збільшите ефективність свого коду.
            </p>

            <h2>Цикл while</h2>
            <p>
                Цикл <code>while</code> виконується, доки певна умова є істинною (<code>true</code>). Ось загальний синтаксис цього циклу:
            </p>
            <pre>
        <code>
          {`
while (умова) {
    // Блок коду, який виконується, поки умова true
}
          `}
        </code>
      </pre>
            <p>
                Приклад використання циклу <code>while</code> для виведення чисел від 1 до 5:
            </p>
            <pre>
        <code>
          {`
let i = 1;
while (i <= 5) {
    console.log(i);
    i++;
}
          `}
        </code>
      </pre>
            <p>
                У цьому прикладі ми ініціалізуємо змінну <code>i</code> значенням 1 і встановлюємо умову, що цикл буде виконуватися, доки <code>i</code> менше або дорівнює 5. Після кожного кроку циклу збільшуємо значення <code>i</code> на 1.
            </p>

            <h2>Цикл do...while</h2>
            <p>
                Цикл <code>do...while</code> схожий на <code>while</code>, але код у блоку виконується принаймні один раз, навіть якщо умова відразу <code>false</code>. Ось синтаксис цього циклу:
            </p>
            <pre>
        <code>
          {`
do {
    // Блок коду, який виконується, поки умова true
} while (умова);
          `}
        </code>
      </pre>
            <p>
                Приклад використання циклу <code>do...while</code> для виведення чисел від 1 до 5:
            </p>
            <pre>
        <code>
          {`
let i = 1;
do {
    console.log(i);
    i++;
} while (i <= 5);
          `}
        </code>
      </pre>
            <p>
                У цьому прикладі ми спочатку виводимо число 1, а потім перевіряємо умову. Оскільки умова <code>i меньше= 5</code> є <code>true</code>, цикл продовжує виконуватися і виводить числа від 2 до 5.
            </p>

            <h2>Порівняння циклів</h2>
            <p>
                Основна різниця між <code>while</code> та <code>do...while</code> полягає в тому, що <code>do...while</code> гарантує, що блок коду виконається принаймні один раз, навіть якщо умова відразу <code>false</code>. У випадку, якщо умова відразу <code>false</code>, то цикл <code>while</code> не виконається.
            </p>
        </div>
    );
};

export default WhileDoWhilePage;