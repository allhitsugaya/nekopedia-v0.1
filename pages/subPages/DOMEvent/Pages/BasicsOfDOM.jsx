import React from 'react';

const BasicsOfDOM = () => {
    return (
        <div>
            <h1>Основи DOM</h1>

            <h2>Що таке DOM (Document Object Model)?</h2>
            <p>
                DOM, або Document Object Model (Модель Об'єктів Документу), - це інтерфейс програмування, який представляє структуру і контент веб-сторінки як деревоподібну колекцію об'єктів. Ця модель дозволяє розробникам легко отримувати доступ до структури та вмісту веб-сторінок, а також змінювати їх з використанням скриптів.
            </p>

            <h2>Роль DOM у веб-розробці</h2>
            <p>
                DOM є фундаментальною частиною веб-розробки, оскільки він дозволяє JavaScript взаємодіяти з веб-сторінкою. Він визначає, як браузер представляє HTML-документи, і це робить їх доступними для програмного змінення. Будь-які зміни, які ви бачите на сторінці після завантаження, зазвичай викликані JavaScript, який змінює DOM.
            </p>

            <h2>Представлення HTML-сторінки в об'єктному дереві</h2>
            <p>
                HTML-сторінка представлена у вигляді дерева об'єктів DOM, де кожен елемент сторінки, такий як <code>&lt;body&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;a&gt;</code>, є об'єктом DOM. Ці об'єкти вкладені один в одного в ієрархічному порядку від кореня документа до листя.
            </p>

            <pre>
        <code>
          {`
          <!DOCTYPE html>
          <html>
            <head>
              <title>Приклад DOM</title>
            </head>
            <body>
              <h1>Вітаємо в світі DOM!</h1>
              <p>Це приклад сторінки.</p>
              <a href="#">Посилання</a>
            </body>
          </html>
          `}
        </code>
      </pre>

            <h2>Ієрархічна природа DOM та взаємозв'язки</h2>
            <p>
                DOM має ієрархічну природу, що означає, що об'єкти розташовані в дереві відповідно до їх вкладеності в HTML-сторінці. Наприклад, <code>&lt;p&gt;</code> є дочірнім елементом <code>&lt;body&gt;</code>. Це розташування вказує на ієрархічні відносини.
            </p>

            <h3>Зміна елементів DOM за допомогою JavaScript</h3>
            <p>
                Ви можете отримати доступ до елементів і їх властивостей, використовуючи JavaScript. Наприклад, ви можете знайти та змінити текст <code>&lt;h1&gt;</code> так:
            </p>

            <pre>
        <code>
          {`
          const title = document.querySelector("h1");
          title.textContent = "Новий заголовок!";
          `}
        </code>
      </pre>

            <p>
                DOM також підтримує події, такі як кліки та наведення, які дозволяють реагувати на взаємодію користувача зі сторінкою.
            </p>

            <p>
                Це базові концепції, які стосуються DOM у веб-розробці та допомагають розуміти, як ви можете взаємодіяти з веб-сторінкою за допомогою JavaScript.
            </p>
        </div>
    );
}

export default BasicsOfDOM;
