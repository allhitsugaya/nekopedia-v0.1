import React from 'react';

const AssignmentOperatorsPage = () => {
    return (
        <div className="page-container">
            <h1>Оператори присвоювання, інкремент та декремент</h1>
            <p>
                Оператори присвоювання, інкремент та декремент - це важливі концепції в мові програмування JavaScript. Вони дозволяють працювати зі змінними та об'єктами та роблять код більш зрозумілим та ефективним. Давайте розглянемо ці концепції докладніше.
            </p>

            <h2>Оператори присвоювання</h2>
            <p>
                Оператори присвоювання використовуються для присвоєння значення змінній. Найпоширенішим оператором присвоювання є <code>=</code>. Наприклад:
            </p>
            <pre>
        <code>
          {`
let x = 10; // Змінній x присвоєно значення 10
          `}
        </code>
      </pre>
            <p>
                Завдяки операторам присвоювання можна легко оновлювати значення змінних. Також існують скорочені форми операцій присвоювання, такі як <code>+=</code>, <code>-=</code> тощо. Наприклад:
            </p>
            <pre>
        <code>
          {`
let y = 5;
y += 3; // Змінній y присвоюється нове значення 8 (5 + 3)
          `}
        </code>
      </pre>

            <h2>Інкремент та декремент</h2>
            <p>
                Інкремент і декремент - це оператори для збільшення або зменшення значення змінної на 1. У циклічних обчисленнях дуже часто використовуються присвоювання вигляду <code>і=і+1</code> та <code>і=і-1</code>. Їх можна задати в скороченій формі за допомогою одномісних операторів збільшення – інкременту (<code>++</code>) і зменшення – декременту (<code>--</code>). Ці оператори (і відповідні операції) мають префіксну (<code>++і, --і</code>) і постфіксну (<code>і++, і--</code>) форми.
            </p>
            <p>
                Головне пам'ятати, що оператор інкремента <code>++</code> збільшує змінну на 1, а оператор декремента <code>--</code> зменшує на 1. Наприклад:
            </p>
            <pre>
        <code>
          {`
let a = 5;
let b = ++a; // Змінна a спочатку збільшується на 1, потім значення присвоюється змінній b (a=6, b=6)
          `}
        </code>
      </pre>
            <pre>
        <code>
          {`
let c = 10;
let d = c--; // Змінна c спочатку присвоюється змінній d, потім зменшується на 1 (c=9, d=10)
          `}
        </code>
      </pre>
            <p>
                Використання інкремента та декремента дозволяє легко збільшувати або зменшувати значення змінних, що дуже корисно у численних обчисленнях та циклах.
            </p>

            <h2>Приклади коду</h2>
            <p>
                Давайте розглянемо декілька прикладів коду, що демонструють використання операторів присвоювання, інкремента та декремента:
            </p>
            <pre>
        <code>
          {`
let num1 = 10;
let num2 = 20;

num1 += num2; // Оператор += додає num2 до num1, num1 стає 30
num2 -= 5;    // Оператор -= віднімає 5 від num2, num2 стає 15

let count = 0;
count++;      // Оператор інкремента count++
count--;      // Оператор декремента count--

let i = 5;
let j = i++; // Оператор постфіксного інкремента, j отримує значення 5, i збільшується на 1 (i=6)
          `}
        </code>
      </pre>
            <p>
                Використання цих операторів допомагає зробити ваш код більш читабельним і зрозумілим, а також сприяє впровадженню швидких та ефективних обчислень.
            </p>
        </div>
    );
};

export default AssignmentOperatorsPage;