import React from 'react';

const CurryingPage = () => {
    return (
        <div className="page-container">
            <h1>Каррінг</h1>
            <p>
                Каррінг (Currying) - це техніка в функціональному програмуванні, яка полягає в трансформації функції з багатьма аргументами у послідовність функцій з одним аргументом кожна.
            </p>
            <p>
                Це дозволяє легко створювати нові функції з меншою кількістю аргументів та більшою зрозумілістю коду. В JavaScript каррінг реалізується за допомогою замикань.
            </p>

            <h2>Приклад каррінгу в JavaScript</h2>
            <p>
                Ось приклад, що ілюструє каррінг в JavaScript:
            </p>
            <pre>
        <code>
          {`
// Функція з двома аргументами
function add(x, y) {
  return x + y;
}

// Функція, що застосовує каррінг до add
function curryAdd(x) {
  return function(y) {
    return x + y;
  };
}

// Використання функції curryAdd
const addFive = curryAdd(5);
console.log(addFive(10)); // Виведе 15

// Або можна зробити так
console.log(curryAdd(5)(10)); // Виведе 15
          `}
        </code>
      </pre>
            <p>
                У цьому прикладі <code>curryAdd</code> перетворює функцію <code>add</code> з двома аргументами у функцію, яка приймає один аргумент <code>x</code> і повертає іншу функцію, яка приймає аргумент <code>y</code> і виконує додавання. Це дозволяє створити нові функції, які додають до <code>x</code> певне значення.
            </p>

            <h2>Користь каррінгу</h2>
            <p>
                Каррінг корисний для:
            </p>
            <ul>
                <li><strong>Часткового застосування функцій:</strong> Створення нових функцій з меншою кількістю аргументів.</li>
                <li><strong>Покращення зрозумілості коду:</strong> Каррінг дозволяє розбивати складні функції на простіші, що робить код більш читабельним.</li>
                <li><strong>Створення функцій вищого порядку:</strong> Каррінг дозволяє легко створювати функції, які можуть передавати додаткову поведінку до існуючих функцій.</li>
            </ul>

            <h2>Заключення</h2>
            <p>
                Каррінг є потужним інструментом у функціональному програмуванні, який дозволяє створювати більш гнучкий та зрозумілий код. Використання каррінгу допомагає уникнути повторень, покращує читабельність коду та полегшує створення складних функцій.
            </p>
        </div>
    );
};

export default CurryingPage;