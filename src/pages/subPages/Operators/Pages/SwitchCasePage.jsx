import React from 'react';

const SwitchCasePage = () => {
    return (
        <div className="page-container">
            <h1>Умовна конструкція switch/case</h1>
            <p>
                Така конструкція дає можливість перевіряти значення змінної на рівність з різними варіантами і виконувати код, пов'язаний із відповідним варіантом. Давайте розглянемо синтаксис <code>switch/case</code>, його використання та наведемо практичні приклади.
            </p>

            <h2>Синтаксис switch/case</h2>
            <p>
                Основна структура <code>switch/case</code> виглядає наступним чином:
            </p>
            <pre>
        <code>
          {`
switch (вираз) {
    case значення1:
        // Код, що виконується, якщо вираз рівний значенню1
        break;
    case значення2:
        // Код, що виконується, якщо вираз рівний значенню2
        break;
    case значення3:
        // Код, що виконується, якщо вираз рівний значенню3
        break;
    // Інші варіанти case
    default:
        // Код, що виконується, якщо жоден варіант не підходить
}
          `}
        </code>
      </pre>
            <ul>
                <li><code>вираз</code> - вираз або значення, яке перевіряється на рівність зі значеннями в <code>case</code>.</li>
                <li><code>case значення1</code> - визначає варіант, який буде виконаний, якщо вираз дорівнює <code>значенню1</code>.</li>
                <li><code>break</code> - ключове слово, яке припиняє виконання <code>switch</code> після виконання коду в потрібному <code>case</code>.</li>
                <li><code>default</code> - варіант, що виконується, якщо жоден із <code>case</code> не підходить.</li>
            </ul>

            <h2>Важливі аспекти switch/case</h2>
            <ul>
                <li>
                    <strong><code>break</code></strong>: Ключове слово <code>break</code> є важливим, оскільки воно припиняє виконання <code>switch</code>, якщо виконується певний варіант. Якщо ви його не використовуєте, виконання продовжиться і для наступних <code>case</code>.
                </li>
                <li>
                    <strong><code>default</code></strong>: Оператор <code>default</code> використовується, якщо жоден варіант не підходить. Він є необов'язковим, але рекомендується використовувати його, щоб мати обробку непередбачуваних значень.
                </li>
                <li>
                    <strong>Типи даних</strong>: <code>switch/case</code> порівнює значення на рівність без перевірки типів даних. Це може призвести до непередбачуваної поведінки, якщо типи відрізняються.
                </li>
            </ul>

            <h2>Приклади використання</h2>

            <h3>День тижня</h3>
            <pre>
        <code>
          {`
let day = "п'ятниця";
let message;

switch (day) {
    case "понеділок":
    case "вівторок":
    case "середа":
    case "четвер":
    case "п'ятниця":
        message = "Це робочий день.";
        break;
    case "субота":
    case "неділя":
        message = "Це вихідний день.";
        break;
    default:
        message = "Неправильно вказаний день.";
}

console.log(message);
          `}
        </code>
      </pre>
            <p>
                У цьому прикладі ми використовуємо <code>switch/case</code>, щоб визначити, чи є заданий день робочим або вихідним. При цьому використовується <code>break</code>, щоб зупинити виконання <code>switch</code> після відповідного варіанта.
            </p>

            <h3>Вибір операції</h3>
            <pre>
        <code>
          {`
let operation = "помножити";
let result;

switch (operation) {
    case "додати":
        result = 10 + 5;
        break;
    case "відняти":
        result = 10 - 5;
        break;
    case "помножити":
        result = 10 * 5;
        break;
    case "поділити":
        result = 10 / 5;
        break;
    default:
        result = "Невідома операція";
}

console.log(\`Результат: \${result}\`);
          `}
        </code>
      </pre>
            <p>
                Тут ми використовуємо <code>switch/case</code>, щоб обрати математичну операцію на основі значення <code>operation</code>.
            </p>

            <div className='conclusion'>
                <h2>Заключні слова</h2>
                <p>
                    Умовна конструкція <code>switch/case</code> є потужним інструментом для обробки різних варіантів
                    значень у вашому коді. Вона дозволяє писати більш читабельний код для обробки багатьох сценаріїв.
                    Пам'ятайте про важливість <code>break</code> та <code>default</code> для точного керування
                    виконанням.
                </p>
                <p>
                    Ви можете використовувати <code>switch/case</code>, коли маєте багато варіантів, і вам потрібно
                    визначити, який код виконувати на основі значення змінної. Практикуйте цю конструкцію, і вона стане
                    корисною у ваших JavaScript-проектах.
                </p>
            </div>
        </div>
    );
};

export default SwitchCasePage;